// Generated by view binder compiler. Do not edit!
package ch.zli.parkposition.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import ch.zli.parkposition.R;
import com.google.android.gms.maps.MapView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonFoto;

  @NonNull
  public final Button buttonPosition;

  @NonNull
  public final Button buttonReset;

  @NonNull
  public final ImageView imageViewFoto;

  @NonNull
  public final MapView mapView;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonFoto,
      @NonNull Button buttonPosition, @NonNull Button buttonReset, @NonNull ImageView imageViewFoto,
      @NonNull MapView mapView) {
    this.rootView = rootView;
    this.buttonFoto = buttonFoto;
    this.buttonPosition = buttonPosition;
    this.buttonReset = buttonReset;
    this.imageViewFoto = imageViewFoto;
    this.mapView = mapView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_foto;
      Button buttonFoto = rootView.findViewById(id);
      if (buttonFoto == null) {
        break missingId;
      }

      id = R.id.button_position;
      Button buttonPosition = rootView.findViewById(id);
      if (buttonPosition == null) {
        break missingId;
      }

      id = R.id.button_reset;
      Button buttonReset = rootView.findViewById(id);
      if (buttonReset == null) {
        break missingId;
      }

      id = R.id.imageView_foto;
      ImageView imageViewFoto = rootView.findViewById(id);
      if (imageViewFoto == null) {
        break missingId;
      }

      id = R.id.mapView;
      MapView mapView = rootView.findViewById(id);
      if (mapView == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, buttonFoto, buttonPosition,
          buttonReset, imageViewFoto, mapView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
